version: "3.8"
# docker exec -it 950e89b97ab9 perf stat -e user_time:u,branch-instructions:u,cpu-cycles,mem-loads  -- sleep 10
services:
  consul:
    image: hashicorp/consul:latest
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"
    restart: always
    cap_add:
      - SYS_ADMIN
      - PERFMON
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  frontend:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    sysctls:
      - net.ipv4.tcp_rmem={{ frontend__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ frontend__tcp_wmem__conf }}
      # - vm.vfs_cache_pressure=100
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    entrypoint: frontend
    ports:
      - "5000:5000"
    depends_on:
      - consul
    restart: always
    cap_add:
      - SYS_ADMIN
      - PERFMON
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ frontend__cpu_max_ratio__conf }}
        #   memory: 128M
        # reservations:
        #   cpus: '0.15'
        #   memory: 64M
      restart_policy:
        condition: any

  profile:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - PERFMON
    sysctls:
      - net.ipv4.tcp_rmem={{ profile__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ profile__tcp_wmem__conf }}
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    entrypoint: profile
    depends_on:
      - mongodb-profile
      - memcached-profile
      - consul
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ profile__cpu_max_ratio__conf }}
        #   memory: 128M
        # reservations:
        #   cpus: '0.15'
        #   memory: 64M
      restart_policy:
        condition: any

  search:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - PERFMON
    sysctls:
      - net.ipv4.tcp_rmem={{ search__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ search__tcp_wmem__conf }}
      # - vm.vfs_cache_pressure=132
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    entrypoint: search
    depends_on:
      - consul
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ search__cpu_max_ratio__conf }}
          # memory: 128M
        # reservations:
        #   cpus: '0.15'
          # memory: 64M
      restart_policy:
        condition: any

  geo:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    sysctls:
      - net.ipv4.tcp_rmem={{ geo__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ geo__tcp_wmem__conf }}
      # - vm.vfs_cache_pressure=200
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    entrypoint: geo
    depends_on:
      - mongodb-geo
      - consul
    restart: always
    cap_add:
      - SYS_ADMIN
      - PERFMON
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ geo__cpu_max_ratio__conf }}
        #   memory: 128M
        # reservations:
        #   cpus: '0.15'
        #   memory: 64M
      restart_policy:
        condition: any

  rate:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    sysctls:
      - net.ipv4.tcp_rmem={{ rate__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ rate__tcp_wmem__conf }}
      # - vm.vfs_cache_pressure=143
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    entrypoint: rate
    depends_on:
      - mongodb-rate
      - memcached-rate
      - consul
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ rate__cpu_max_ratio__conf }}
        #   memory: 128M
        # reservations:
        #   cpus: '0.15'
        #   memory: 64M
      restart_policy:
        condition: any

  review:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - MEMC_TIMEOUT
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - PERFMON
    sysctls:
      - net.ipv4.tcp_rmem={{ review__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ review__tcp_wmem__conf }}
      # - vm.vfs_cache_pressure=250
    image: hotel_reserv_review_single_node
    privileged: true
    entrypoint: review
    container_name: 'hotel_reserv_review'
    depends_on:
      - mongodb-review
      - memcached-review
      - consul
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ review__cpu_max_ratio__conf }}
    restart: always
  
  attractions:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - MEMC_TIMEOUT
      - LOG_LEVEL
    build: .
    cap_add:
      - SYS_ADMIN
      - PERFMON
    sysctls:
      - net.ipv4.tcp_rmem={{ attractions__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ attractions__tcp_wmem__conf }}
    image: hotel_reserv_attractions_single_node
    privileged: true
    entrypoint: attractions
    container_name: 'hotel_reserv_attractions'
    depends_on:
      - mongodb-attractions
      - consul
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ attractions__cpu_max_ratio__conf }}
    restart: always

  recommendation:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    sysctls:
      - net.ipv4.tcp_rmem={{ recommendation__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ recommendation__tcp_wmem__conf }}
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    entrypoint: recommendation
    depends_on:
      - mongodb-recommendation
      - consul
    restart: always
    cap_add:
      - SYS_ADMIN
      - PERFMON
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ recommendation__cpu_max_ratio__conf }}
        #   memory: 128M
        # reservations:
        #   cpus: '0.15'
        #   memory: 64M
      restart_policy:
        condition: any

  user:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - PERFMON
    sysctls:
      - net.ipv4.tcp_rmem={{ user__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ user__tcp_wmem__conf }}
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    entrypoint: user
    depends_on:
      - mongodb-user
      - consul
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ user__cpu_max_ratio__conf }}
      restart_policy:
        condition: any

  reservation:
    configs:
      - source: server_config
        target: /config.json
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    build: .
    security_opt:
      - seccomp:unconfined
    sysctls:
      - net.ipv4.tcp_rmem={{ reservation__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ reservation__tcp_rmem__conf }}
      # - vm.vfs_cache_pressure=145
    image: deathstarbench/hotel-reservation:latest
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    entrypoint: reservation
    depends_on:
      - mongodb-reservation
      - memcached-reserve
      - consul
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: {{ reservation__cpu_max_ratio__conf }}
        #   memory: 128M
        # reservations:
        #   cpus: '0.15'
        #   memory: 64M
      restart_policy:
        condition: any

  jaeger:
    image: jaegertracing/all-in-one:latest
    privileged: true
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - PERFMON
    ports:
      - "14269"
      - "5778:5778"
      - "14268:14268"
      - "14267"
      - "16686:16686"
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.3'
        #   memory: 128M
        # reservations:
        #   cpus: '0.15'
        #   memory: 64M
      restart_policy:
        condition: any

  memcached-rate:
    image: memcached:latest
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: user-memcached
    command: memcached -m {{ memcached_rate__memory_limit__conf }} -t {{ memcached_rate__threads__conf }} -f {{ memcached_rate__slab_growth_factor__conf }}
    logging:
      options:
        max-size: 50m
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  memcached-review:
    image: memcached
    privileged: true
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: user-memcached
    command: memcached -m {{ memcached_review__memory_limit__conf }} -t {{ memcached_review__threads__conf }} -f {{ memcached_review__slab_growth_factor__conf }}
    container_name: 'hotel_reserv_review_mmc'
    restart: always
    logging:
      options:
        max-size: 50m

  memcached-profile:
    image: memcached:latest
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: user-memcached
    command: memcached -m {{ memcached_profile__memory_limit__conf }} -t {{ memcached_profile__threads__conf }} -f {{ memcached_profile__slab_growth_factor__conf }}
    logging:
      options:
        max-size: 50m
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  memcached-reserve:
    image: memcached:latest
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: user-memcached
    command: memcached -m {{ memcached_reserve__memory_limit__conf }} -t {{ memcached_reserve__threads__conf }} -f {{ memcached_reserve__slab_growth_factor__conf }}
    logging:
      options:
        max-size: 50m
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-geo:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: geo-db
    volumes:
      - geo:/data/db
      - ./init_geo.d/:/docker-entrypoint-initdb.d/
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_geo__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_geo__tcp_wmem__conf }}
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-profile:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: profile-db
    volumes:
      - profile:/data/db
      - ./init_profile.d/:/docker-entrypoint-initdb.d/
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_profile__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_profile__tcp_wmem__conf }}
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-rate:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: rate-db
    volumes:
      - rate:/data/db
      - ./init_rate.d/:/docker-entrypoint-initdb.d/
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_rate__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_rate__tcp_wmem__conf }}
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-review:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: review-db
    volumes:
      - review:/data/db
      - ./init_review.d/:/docker-entrypoint-initdb.d/
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_review__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_review__tcp_wmem__conf }}
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-attractions:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: attractions-db
    volumes:
      - attractions:/data/db
      - ./init_attractions.d/:/docker-entrypoint-initdb.d/
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_attractions__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_attractions__tcp_wmem__conf }}
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-recommendation:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: recommendation-db
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_recommendation__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_recommendation__tcp_wmem__conf }}
    volumes:
      - recommendation:/data/db
      - ./init_recommendation.d/:/docker-entrypoint-initdb.d/
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-reservation:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: reservation-db
    volumes:
      - reservation:/data/db
      - ./init_reservation.d/:/docker-entrypoint-initdb.d/
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_reservation__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_reservation__tcp_wmem__conf }}
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-user:
    image: mongo:5.0
    security_opt:
      - seccomp:unconfined
    privileged: true
    cap_add:
      - SYS_ADMIN
      - PERFMON
    hostname: user-db
    volumes:
      - user:/data/db
      - ./init_user.d/:/docker-entrypoint-initdb.d/
    sysctls:
      - net.ipv4.tcp_rmem={{ mongodb_user__tcp_rmem__conf }}
      - net.ipv4.tcp_wmem={{ mongodb_user__tcp_wmem__conf }}
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any

volumes:
  geo:
  profile:
  rate:
  recommendation:
  reservation:
  user:
  review:
  attractions:

configs:
  server_config:
    file: ./config.json
